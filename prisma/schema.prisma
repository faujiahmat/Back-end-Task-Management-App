generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tasks      Task[]
  categories Category[]
}

model Task {
  id          Int       @id @default(autoincrement())
  userId      Int
  title       String
  description String?
  status      TaskStatus @default(PENDING)
  priority    TaskPriority @default(MEDIUM)
  dueDate     DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  user        User      @relation(fields: [userId], references: [id])
  categories  TaskCategory[]
}

model Category {
  id        Int       @id @default(autoincrement())
  userId    Int
  name      String
  createdAt DateTime  @default(now())

  user      User      @relation(fields: [userId], references: [id])
  tasks     TaskCategory[]
}

model TaskCategory {
  id         Int       @id @default(autoincrement())
  taskId     Int
  categoryId Int

  task       Task      @relation(fields: [taskId], references: [id], onDelete: Cascade)
  category   Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@unique([taskId, categoryId]) 
}


enum TaskStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
}
